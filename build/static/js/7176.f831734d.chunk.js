"use strict";(self.webpackChunkmtrh_eboard=self.webpackChunkmtrh_eboard||[]).push([[7176],{97176:function(e,t,o){o.r(t);o(72791);var n=o(16094),r=o(61436),a=o(80184);t.default=function(){return(0,a.jsxs)("div",{children:[(0,a.jsx)("h2",{children:"Redux"}),(0,a.jsxs)("p",{children:[(0,a.jsx)("a",{href:"https://redux.js.org/",target:"_blank",rel:"noreferrer",children:"Redux"})," is a popular application state management solution that can be integrated with front-end frameworks like React, it allows you to write scalable apps with maintainable codebases, however, using redux requires a lot of boilerplate code. To reduce the boilerplate codes and facilitate easier functionalities, ",(0,a.jsx)("a",{href:"https://redux-toolkit.js.org/",target:"_blank",rel:"noreferrer",children:"Redux toolkit (RTK)"})," is a better option, it comes with comes with built in Redux Thunk Middleware that use for asynchronous actions and standard way to writing Redux logic."]}),(0,a.jsxs)("p",{children:["You can find out Redux store configurations under ",(0,a.jsx)("code",{children:"src/store/"}),", there's also several slice globally used as following:"]}),(0,a.jsxs)("ul",{children:[(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"theme"}),(0,a.jsx)("p",{class:"m-0",children:"This state handle all theme related data."})]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"auth"}),(0,a.jsx)("p",{class:"m-0",children:"This state handles the app authentication info."})]})]}),(0,a.jsxs)("div",{className:"mt-4",children:[(0,a.jsx)("h4",{children:"Code Splitting"}),(0,a.jsx)("p",{class:"mt-1",children:"We have implemented reducer injection approaches in our code base for a code splitting strategy, it can dynamically add reducers to the store when needed. Here is some example code for reducers registry:"}),(0,a.jsx)(n.Z,{className:"hl-code",language:"javascript",style:r.Z,children:"// store/index.js \nimport { combineReducers } from '@reduxjs/toolkit'\nimport yourSlice from './yourSlice'\nimport anyOtherSlice from './anyOtherSlice'\n\nconst reducer = combineReducers({\n    yourStateKeyName: yourSlice,\n\tanyOtherSliceKeyName: anyOtherSlice\n})\n\nexport default reducer"}),(0,a.jsx)("p",{children:"And then you can expose them to your components (we prefer the entry of your view component)"}),(0,a.jsx)(n.Z,{className:"hl-code",language:"javascript",style:r.Z,children:"import reducer from './store'\nimport { injectReducer } from 'store/index'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { someActionFromYourSlice } from './store/yourSlice'\n\ninjectReducer('yourReducerName', reducer)\nconst YourComponent = () => {\n\n\tconst dispatch = useDispatch()\n\n\t// Use the useSelector hook to access the store state.\n\tconst someStateFromYourSlice = useSelector((state) => state.yourReducerName.yourStateKeyName.someState)\n\n\tuseEffect(() => {\n\t\t// Use useDispatch hook to dispatch an action.\n\t\tdispatch(someActionFromYourSlice())\n\t}, [])\n\n\treturn (\n\t\t<>{someStateFromYourSlice}</>\n\t)\n}"})]}),(0,a.jsxs)("div",{className:"mt-4",children:[(0,a.jsx)("h4",{children:"Creating New Slice"}),(0,a.jsx)("p",{class:"mt-1",children:"Slice is a collection of reducer logic and actions for a single feature, hence we sugguest to place slice file under your features module folder for better logic scoping. Here is a basic example of a slice."}),(0,a.jsx)(n.Z,{className:"hl-code",language:"javascript",style:r.Z,children:"import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  \tsomeState: ''\n}\n\nconst yourSlice = createSlice({\n\tname: 'sliceName',\n\tinitialState,\n\treducers: {}\n})\n\nexport default yourSlice.reducer"})]}),(0,a.jsxs)("div",{className:"mt-4",children:[(0,a.jsx)("h4",{children:"Creating a reducer"}),(0,a.jsx)("p",{class:"mt-1",children:"You can define your reducers in slice as following code:"}),(0,a.jsx)(n.Z,{className:"hl-code",language:"javascript",style:r.Z,children:"import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  someState: ''\n}\n\nconst yourSlice = createSlice({\n  name: 'sliceName',\n  initialState,\n  reducers: {\n\tsomeActionFromYourSlice: (state, action) => {\n\t\tstate.someState = action.payload\n\t},\n  }\n})\n\nexport const { someActionFromYourSlice } = yourSlice.actions\n\nexport default yourSlice.reducer"})]}),(0,a.jsxs)("div",{className:"mt-4",children:[(0,a.jsx)("h4",{children:"Async Requests with createAsyncThunk"}),(0,a.jsxs)("p",{class:"mt-1",children:["You can also make an API request with ",(0,a.jsx)("code",{children:"createAsyncThunk"})," via extraReducers"]}),(0,a.jsx)(n.Z,{className:"hl-code",language:"javascript",style:r.Z,children:"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { someService } from 'services/SomeService'\n\nexport const getApiData = createAsyncThunk('sliceName/getApiData',async (data) => {\n    const response = await someService(data)\n    return response.data\n})\n\nconst initialState = {\n  someState: ''\n  loading: false\n}\n\nconst yourSlice = createSlice({\n  name: 'sliceName',\n  initialState,\n  reducers: {\n\tsomeActionFromYourSlice: (state, action) => {\n\t\tstate.someState = action.payload\n\t},\n  },\n  extraReducers: (builder) => {\n    builder\n\t\t.addCase(getApiData.fulfilled, (state, action) => {\n\t\t\tstate.someState = action.payload\n\t\t\tstate.loading = false\n\t\t})\n\t\t.addCase(getApiData.pending, (state) => {\n\t\t\tstate.loading = true\n\t\t})\n\t\t.addCase(getApiData.rejected, (state) => {\n\t\t\tstate.loading = false\n\t\t})\n  },\n})\n\nexport const { someActionFromYourSlice } = yourSlice.actions\n\nexport default yourSlice.reducer"}),(0,a.jsxs)("p",{children:["Here's also another example for ",(0,a.jsx)("code",{children:"extrareducers"})," as an object:"]}),(0,a.jsx)(n.Z,{className:"hl-code",language:"javascript",style:r.Z,children:"const yourSlice = createSlice({\n  \t\t...,\n\t  extraReducers: {\n\t\t[getApiData.fulfilled]: (state, action) => {\n\t\t\tstate.someState = action.payload\n\t\t\tstate.loading = false\n\t\t},\n\t\t[getApiData.pending]: (state) => {\n\t\t\tstate.loading = true\n\t\t},\n\t\t[getApiData.pending]: (state) => {\n\t\t\tstate.loading = false\n\t\t},\n\t}\n})\n\nexport const { someActionFromYourSlice } = yourSlice.actions\n\nexport default yourSlice.reducer"}),(0,a.jsxs)("p",{children:["You can also study the ",(0,a.jsx)("a",{href:"https://redux-toolkit.js.org/",target:"_blank",rel:"noreferrer",children:"redux-toolkit"})," documentation to better understand if you are not familiar redux-toolkit. "]})]})]})}},61436:function(e,t){t.Z={'code[class*="language-"]':{color:"#c5c8c6",textShadow:"0 1px rgba(0, 0, 0, 0.3)",fontFamily:"Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace",direction:"ltr",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"#c5c8c6",textShadow:"0 1px rgba(0, 0, 0, 0.3)",fontFamily:"Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace",direction:"ltr",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",padding:"1em",margin:".5em 0",overflow:"auto",borderRadius:"0.3em",background:"#1d1f21"},':not(pre) > code[class*="language-"]':{background:"#1d1f21",padding:".1em",borderRadius:".3em"},comment:{color:"#7C7C7C"},prolog:{color:"#7C7C7C"},doctype:{color:"#7C7C7C"},cdata:{color:"#7C7C7C"},punctuation:{color:"#c5c8c6"},".namespace":{Opacity:".7"},property:{color:"#96CBFE"},keyword:{color:"#96CBFE"},tag:{color:"#96CBFE"},"class-name":{color:"#FFFFB6",textDecoration:"underline"},boolean:{color:"#99CC99"},constant:{color:"#99CC99"},symbol:{color:"#f92672"},deleted:{color:"#f92672"},number:{color:"#FF73FD"},selector:{color:"#A8FF60"},"attr-name":{color:"#A8FF60"},string:{color:"#A8FF60"},char:{color:"#A8FF60"},builtin:{color:"#A8FF60"},inserted:{color:"#A8FF60"},variable:{color:"#C6C5FE"},operator:{color:"#EDEDED"},entity:{color:"#FFFFB6",cursor:"help"},url:{color:"#96CBFE"},".language-css .token.string":{color:"#87C38A"},".style .token.string":{color:"#87C38A"},atrule:{color:"#F9EE98"},"attr-value":{color:"#F9EE98"},function:{color:"#DAD085"},regex:{color:"#E9C062"},important:{color:"#fd971f",fontWeight:"bold"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"}}}}]);
//# sourceMappingURL=7176.f831734d.chunk.js.map