{"version":3,"file":"static/js/3130.530ebe7c.chunk.js","mappings":"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","sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","components/shared-components/Flex/index.js","constants/ChartConstant.js","layouts/inner-app-layout/index.js","utils/index.js","views/app-views/apps/chat/Conversation.js","views/app-views/apps/chat/ChatContent.js","views/app-views/apps/chat/ChatMenu.js","views/app-views/apps/chat/index.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","/** @jsxImportSource @emotion/react */\r\nimport { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer, Card } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, DARK_MODE, BORDER } from 'constants/ThemeConstant';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst MainContent = styled.div(({hasPageHeader, gutter}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tminHeight: `calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px * 2  - 2px);`,\r\n\t\twidth: '100%',\r\n\t\tpadding: gutter ? 24: 0\r\n\t}\r\n\r\n\tif (hasPageHeader) {\r\n\t\tbaseStyle.minHeight = '75vh'\r\n\t}\r\n\r\n\treturn baseStyle\r\n})\r\n\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\treturn (\r\n\t\t<div style={{width: `${sideContentWidth}px`, borderInlineEnd: `1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR }`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\topen={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = props => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className=\"mb-0\" css={css`\r\n\t\t\t>.ant-card-body {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 0px;\r\n\t\t\t}\r\n\t\t`}>\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<MainContent hasPageHeader={pageHeader} gutter={sideContentGutter}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</MainContent>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useRef, useState, useEffect } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Avatar, Divider, Input, Form, Button, Menu } from 'antd';\r\nimport { \r\n\tFileOutlined, \r\n\tSendOutlined, \r\n\tPaperClipOutlined, \r\n\tSmileOutlined, \r\n\tAudioMutedOutlined,\r\n\tUserOutlined,\r\n\tDeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst menu = () => (\r\n\t<Menu>\r\n\t\t<Menu.Item key=\"0\">\r\n\t\t\t<UserOutlined />\r\n\t\t\t<span>User Info</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Item key=\"1\">\r\n\t\t\t<AudioMutedOutlined />\r\n\t\t\t<span>Mute Chat</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Divider />\r\n\t\t<Menu.Item key=\"3\">\r\n\t\t\t<DeleteOutlined />\r\n\t\t\t<span>Delete Chat</span>\r\n\t\t</Menu.Item>\r\n\t</Menu>\r\n);\r\n\r\nconst Conversation = () => {\r\n\r\n\tconst formRef = useRef();\r\n\tconst chatBodyRef = useRef();\r\n\r\n\tconst params = useParams();\r\n\r\n\tconst [ info, setInfo ] = useState({});\r\n\tconst [ msgList, setMsgList ] = useState([]);\r\n\r\n\tconst { id } = params\r\n\r\n\tconst getUserId = () => {\r\n\t\treturn parseInt(parseInt(id))\r\n\t}\r\n\t\r\n\tconst getConversation = currentId => {\r\n\t\tconst data = ChatData.filter(elm => elm.id === currentId)\r\n\r\n\t\tsetInfo(data[0])\r\n\t\tsetMsgList(data[0].msg)\r\n\t}\r\n\r\n\tconst getMsgType = obj => {\r\n\t\tswitch (obj.msgType) {\r\n\t\t\tcase 'text':\r\n\t\t\t\treturn <span>{obj.text}</span>\r\n\t\t\tcase 'image':\r\n\t\t\t\treturn <img src={obj.text} alt={obj.text} />\r\n\t\t\tcase 'file':\r\n\t\t\t\treturn (\r\n\t\t\t\t<Flex alignItems=\"center\" className=\"msg-file\">\r\n\t\t\t\t\t<FileOutlined className=\"font-size-md\"/>\r\n\t\t\t\t\t<span className=\"ml-2 font-weight-semibold text-link pointer\">\r\n\t\t\t\t\t\t<u>{obj.text}</u>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t)\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tchatBodyRef.current.scrollToBottom()\r\n\t}\r\n\r\n\tconst onSend = values => {\r\n\t\tif (values.newMsg) {\r\n\t\t\tconst newMsgData = {\r\n\t\t\t\tavatar: \"\",\r\n\t\t\t\tfrom: \"me\",\r\n\t\t\t\tmsgType: \"text\",\r\n\t\t\t\ttext: values.newMsg,\r\n\t\t\t\ttime: \"\",\r\n\t\t\t};\r\n\r\n\t\t\tformRef.current.setFieldsValue({\r\n\t\t\t\tnewMsg: ''\r\n\t\t\t});\r\n\r\n\t\t\tsetMsgList([...msgList, newMsgData]);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst emptyClick = (e) => {\r\n    \te.preventDefault();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetConversation(getUserId())\r\n\t\tscrollToBottom()\r\n\t}, [id])\r\n\t\r\n\tconst chatContentHeader = name => (\r\n\t\t<div className=\"chat-content-header\">\r\n\t\t\t<h4 className=\"mb-0\">{name}</h4>\r\n\t\t\t<div>\r\n\t\t\t\t<EllipsisDropdown menu={menu}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\tconst chatContentBody = (props, id) => (\r\n\t\t<div className=\"chat-content-body\">\r\n\t\t\t<Scrollbars ref={chatBodyRef} autoHide>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.map((elm, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`msg-${id}-${i}`} \r\n\t\t\t\t\t\t\tclassName={`msg ${elm.msgType === 'date'? 'datetime' : ''} ${elm.from === 'opposite'? 'msg-recipient' : elm.from === 'me'? 'msg-sent' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.avatar? \r\n\t\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t<Avatar src={elm.avatar} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.text?\r\n\t\t\t\t\t\t\t\t<div className={`bubble ${!elm.avatar? 'ml-5' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"bubble-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t{getMsgType(elm)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.msgType === 'date'?\r\n\t\t\t\t\t\t\t\t<Divider>{elm.time}</Divider>\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</Scrollbars>\r\n\t\t</div>\r\n\t)\r\n\r\n\tconst chatContentFooter = () => (\r\n\t\t<div className=\"chat-content-footer\">\r\n\t\t\t<Form name=\"msgInput\" ref={formRef} onFinish={onSend} className=\"w-100\">\r\n\t\t\t\t<Form.Item name=\"newMsg\" className=\"mb-0\">\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\t\t\tplaceholder=\"Type a message...\"\r\n\t\t\t\t\t\tsuffix={\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t<a href=\"/#\"  className=\"text-dark font-size-lg mr-3\" onClick={emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<SmileOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<a href=\"/#\" className=\"text-dark font-size-lg mr-3\" onClick={emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<PaperClipOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<Button shape=\"circle\" type=\"primary\" size=\"small\" onClick={onSend} htmlType=\"submit\">\r\n\t\t\t\t\t\t\t\t\t<SendOutlined />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-content\">\r\n\t\t\t\t{chatContentHeader(info.name)}\r\n\t\t\t\t{chatContentBody(msgList, params.id)}\r\n\t\t\t\t{chatContentFooter()}\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Conversation\r\n","import React from 'react'\r\nimport { Route, Routes, } from 'react-router-dom';\r\nimport Conversation from './Conversation';\r\n\r\nconst ConversationEmpty = () => (\r\n  <div className=\"chat-content-empty\">\r\n    <div className=\"text-center\">\r\n      <img src=\"/img/others/img-11.png\" alt=\"Start a Conversation\" />\r\n      <h1 className=\"font-weight-light\">Start a conversation</h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst ChatContent = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path={`:id`} element={<Conversation />} />\r\n      <Route path={`/`} element={<ConversationEmpty />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default ChatContent\r\n","import React, { useState } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Badge, Input } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { COLOR_1 } from 'constants/ChartConstant';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst ChatMenu = () => {\r\n\r\n\tconst [list, setList] = useState(ChatData);\r\n\r\n\tconst location = useLocation()\r\n\r\n\tlet navigate = useNavigate();\r\n\r\n\tconst openChat = id => {\r\n\r\n\t\tconst data = list.map( elm => {\r\n\t\t\tif(elm.id === id) {\r\n\t\t\t\telm.unread = 0\r\n\t\t\t}\r\n\t\t\treturn elm\r\n\t\t})\r\n\t\tsetList(data)\r\n\t\tnavigate(`${id}`)\r\n\t}\r\n\r\n\tconst searchOnChange = e => {\r\n\t\tconst query = e.target.value;\r\n\t\tconst data = ChatData.filter(item => {\r\n\t\t\treturn query === ''? item : item.name.toLowerCase().includes(query)\r\n\t\t})\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\tconst id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1])\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-menu\">\r\n\t\t\t<div className=\"chat-menu-toolbar\">\r\n\t\t\t\t<Input \r\n\t\t\t\t\tplaceholder=\"Search\" \r\n\t\t\t\t\tonChange={searchOnChange}\r\n\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t<SearchOutlined className=\"font-size-lg mr-2\"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chat-menu-list\">\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.map( (item, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`chat-item-${item.id}`} \r\n\t\t\t\t\t\t\tonClick={() => openChat(item.id)} \r\n\t\t\t\t\t\t\tclassName={`chat-menu-list-item ${i === (list.length - 1)? 'last' : ''} ${item.id === id? 'selected' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AvatarStatus src={item.avatar} name={item.name} subTitle={item.msg[item.msg.length - 1].text}/>\r\n\t\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<div className=\"chat-menu-list-item-time\">{item.time}</div>\r\n\t\t\t\t\t\t\t\t{item.unread === 0 ? <span></span> : <Badge count={item.unread} style={{backgroundColor: COLOR_1}}/>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ChatMenu\r\n","import React from 'react'\r\nimport InnerAppLayout from 'layouts/inner-app-layout';\r\nimport ChatContent from './ChatContent';\r\nimport ChatMenu from './ChatMenu';\r\n\r\nconst Chat = props => {\r\n\treturn (\r\n\t\t<div className=\"chat\">\r\n\t\t\t<InnerAppLayout \r\n\t\t\t\tsideContent={<ChatMenu {...props}/>}\r\n\t\t\t\tmainContent={<ChatContent {...props}/>}\r\n\t\t\t\tsideContentWidth={450}\r\n\t\t\t\tsideContentGutter={false}\r\n\t\t\t\tborder\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat\r\n"],"names":["renderAvatar","props","className","type","text","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","EllipsisDropdown","overlay","menu","placement","trigger","defaultProps","Flex","styled","justifyContent","alignItems","flexDirection","padding","margin","baseStyle","display","COLOR_1","COLOR_2","COLOR_4","COLOR_1_LIGHT","COLOR_2_LIGHT","COLORS","COLOR_AXES","COLOR_TEXT","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","apexPieChartDefaultOption","pie","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","sparkline","fixed","x","title","seriesName","marker","useBreakpoint","Grid","MainContent","hasPageHeader","gutter","minHeight","TEMPLATE","SideContent","sideContent","sideContentWidth","currentTheme","border","useSelector","state","theme","style","borderInlineEnd","DARK_MODE","BORDER","SideContentMobile","visible","onSideContentClose","closable","onClose","open","bodyStyle","paddingLeft","paddingRight","mainContent","pageHeader","sideContentGutter","isMobile","utils","includes","useState","setVisible","css","e","Utils","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","UserOutlined","AudioMutedOutlined","DeleteOutlined","formRef","useRef","chatBodyRef","params","useParams","info","setInfo","msgList","setMsgList","getMsgType","obj","msgType","alt","FileOutlined","onSend","values","newMsg","newMsgData","avatar","from","time","current","setFieldsValue","emptyClick","preventDefault","useEffect","currentId","ChatData","elm","msg","getConversation","scrollToBottom","ref","autoHide","map","chatContentBody","onFinish","autoComplete","placeholder","href","SmileOutlined","PaperClipOutlined","htmlType","SendOutlined","ConversationEmpty","element","setList","location","useLocation","navigate","useNavigate","pathname","onChange","query","target","prefix","SearchOutlined","unread","openChat","AvatarStatus","count","backgroundColor"],"sourceRoot":""}