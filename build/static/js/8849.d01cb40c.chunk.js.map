{"version":3,"file":"static/js/8849.d01cb40c.chunk.js","mappings":"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","sources":["../node_modules/antd/es/_util/getScroll.js","../node_modules/antd/es/_util/easings.js","../node_modules/antd/es/_util/scrollTo.js","../node_modules/antd/es/anchor/context.js","../node_modules/antd/es/anchor/AnchorLink.js","../node_modules/antd/es/anchor/style/index.js","../node_modules/antd/es/anchor/Anchor.js","../node_modules/antd/es/anchor/index.js","../node_modules/compute-scroll-into-view/src/index.ts","../node_modules/scroll-into-view-if-needed/src/index.ts"],"sourcesContent":["export function isWindow(obj) {\n  return obj !== null && obj !== undefined && obj === obj.window;\n}\nexport default function getScroll(target, top) {\n  var _a, _b;\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n  const method = top ? 'scrollTop' : 'scrollLeft';\n  let result = 0;\n  if (isWindow(target)) {\n    result = target[top ? 'pageYOffset' : 'pageXOffset'];\n  } else if (target instanceof Document) {\n    result = target.documentElement[method];\n  } else if (target instanceof HTMLElement) {\n    result = target[method];\n  } else if (target) {\n    // According to the type inference, the `target` is `never` type.\n    // Since we configured the loose mode type checking, and supports mocking the target with such shape below::\n    //    `{ documentElement: { scrollLeft: 200, scrollTop: 400 } }`,\n    //    the program may falls into this branch.\n    // Check the corresponding tests for details. Don't sure what is the real scenario this happens.\n    result = target[method];\n  }\n  if (target && !isWindow(target) && typeof result !== 'number') {\n    result = (_b = ((_a = target.ownerDocument) !== null && _a !== void 0 ? _a : target).documentElement) === null || _b === void 0 ? void 0 : _b[method];\n  }\n  return result;\n}","// eslint-disable-next-line import/prefer-default-export\nexport function easeInOutCubic(t, b, c, d) {\n  const cc = c - b;\n  t /= d / 2;\n  if (t < 1) {\n    return cc / 2 * t * t * t + b;\n  }\n  // eslint-disable-next-line no-return-assign\n  return cc / 2 * ((t -= 2) * t * t + 2) + b;\n}","import raf from \"rc-util/es/raf\";\nimport { easeInOutCubic } from './easings';\nimport getScroll, { isWindow } from './getScroll';\nexport default function scrollTo(y) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    getContainer = () => window,\n    callback,\n    duration = 450\n  } = options;\n  const container = getContainer();\n  const scrollTop = getScroll(container, true);\n  const startTime = Date.now();\n  const frameFunc = () => {\n    const timestamp = Date.now();\n    const time = timestamp - startTime;\n    const nextScrollTop = easeInOutCubic(time > duration ? duration : time, scrollTop, y, duration);\n    if (isWindow(container)) {\n      container.scrollTo(window.pageXOffset, nextScrollTop);\n    } else if (container instanceof Document || container.constructor.name === 'HTMLDocument') {\n      container.documentElement.scrollTop = nextScrollTop;\n    } else {\n      container.scrollTop = nextScrollTop;\n    }\n    if (time < duration) {\n      raf(frameFunc);\n    } else if (typeof callback === 'function') {\n      callback();\n    }\n  };\n  raf(frameFunc);\n}","import * as React from 'react';\nconst AnchorContext = /*#__PURE__*/React.createContext(undefined);\nexport default AnchorContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport AnchorContext from './context';\nconst AnchorLink = props => {\n  const {\n    href = '#',\n    title,\n    prefixCls: customizePrefixCls,\n    children,\n    className,\n    target\n  } = props;\n  const context = React.useContext(AnchorContext);\n  const {\n    registerLink,\n    unregisterLink,\n    scrollTo,\n    onClick,\n    activeLink,\n    direction\n  } = context || {};\n  React.useEffect(() => {\n    registerLink === null || registerLink === void 0 ? void 0 : registerLink(href);\n    return () => {\n      unregisterLink === null || unregisterLink === void 0 ? void 0 : unregisterLink(href);\n    };\n  }, [href, registerLink, unregisterLink]);\n  const handleClick = e => {\n    onClick === null || onClick === void 0 ? void 0 : onClick(e, {\n      title,\n      href\n    });\n    scrollTo === null || scrollTo === void 0 ? void 0 : scrollTo(href);\n  };\n  // =================== Warning =====================\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!children || direction !== 'horizontal', 'Anchor.Link', '`Anchor.Link children` is not supported when `Anchor` direction is horizontal') : void 0;\n  }\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, _ref => {\n    let {\n      getPrefixCls\n    } = _ref;\n    const prefixCls = getPrefixCls('anchor', customizePrefixCls);\n    const active = activeLink === href;\n    const wrapperClassName = classNames(`${prefixCls}-link`, className, {\n      [`${prefixCls}-link-active`]: active\n    });\n    const titleClassName = classNames(`${prefixCls}-link-title`, {\n      [`${prefixCls}-link-title-active`]: active\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClassName\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: titleClassName,\n      href: href,\n      title: typeof title === 'string' ? title : '',\n      target: target,\n      onClick: handleClick\n    }, title), direction !== 'horizontal' ? children : null);\n  });\n};\nexport default AnchorLink;","import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent, textEllipsis } from '../../style';\n// ============================== Shared ==============================\nconst genSharedAnchorStyle = token => {\n  const {\n    componentCls,\n    holderOffsetBlock,\n    motionDurationSlow,\n    lineWidthBold,\n    colorPrimary,\n    lineType,\n    colorSplit\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: {\n      marginBlockStart: -holderOffsetBlock,\n      paddingBlockStart: holderOffsetBlock,\n      // delete overflow: auto\n      // overflow: 'auto',\n      backgroundColor: 'transparent',\n      [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n        position: 'relative',\n        paddingInlineStart: lineWidthBold,\n        [`${componentCls}-link`]: {\n          paddingBlock: token.anchorPaddingBlock,\n          paddingInline: `${token.anchorPaddingInline}px 0`,\n          '&-title': Object.assign(Object.assign({}, textEllipsis), {\n            position: 'relative',\n            display: 'block',\n            marginBlockEnd: token.anchorTitleBlock,\n            color: token.colorText,\n            transition: `all ${token.motionDurationSlow}`,\n            '&:only-child': {\n              marginBlockEnd: 0\n            }\n          }),\n          [`&-active > ${componentCls}-link-title`]: {\n            color: token.colorPrimary\n          },\n          // link link\n          [`${componentCls}-link`]: {\n            paddingBlock: token.anchorPaddingBlockSecondary\n          }\n        }\n      }),\n      [`&:not(${componentCls}-horizontal)`]: {\n        [componentCls]: {\n          '&::before': {\n            position: 'absolute',\n            left: {\n              _skip_check_: true,\n              value: 0\n            },\n            top: 0,\n            height: '100%',\n            borderInlineStart: `${lineWidthBold}px ${lineType} ${colorSplit}`,\n            content: '\" \"'\n          },\n          [`${componentCls}-ink`]: {\n            position: 'absolute',\n            left: {\n              _skip_check_: true,\n              value: 0\n            },\n            display: 'none',\n            transform: 'translateY(-50%)',\n            transition: `top ${motionDurationSlow} ease-in-out`,\n            width: lineWidthBold,\n            backgroundColor: colorPrimary,\n            [`&${componentCls}-ink-visible`]: {\n              display: 'inline-block'\n            }\n          }\n        }\n      },\n      [`${componentCls}-fixed ${componentCls}-ink ${componentCls}-ink`]: {\n        display: 'none'\n      }\n    }\n  };\n};\nconst genSharedAnchorHorizontalStyle = token => {\n  const {\n    componentCls,\n    motionDurationSlow,\n    lineWidthBold,\n    colorPrimary\n  } = token;\n  return {\n    [`${componentCls}-wrapper-horizontal`]: {\n      position: 'relative',\n      '&::before': {\n        position: 'absolute',\n        left: {\n          _skip_check_: true,\n          value: 0\n        },\n        right: {\n          _skip_check_: true,\n          value: 0\n        },\n        bottom: 0,\n        borderBottom: `1px ${token.lineType} ${token.colorSplit}`,\n        content: '\" \"'\n      },\n      [componentCls]: {\n        overflowX: 'scroll',\n        position: 'relative',\n        display: 'flex',\n        scrollbarWidth: 'none' /* Firefox */,\n        '&::-webkit-scrollbar': {\n          display: 'none' /* Safari and Chrome */\n        },\n\n        [`${componentCls}-link:first-of-type`]: {\n          paddingInline: 0\n        },\n        [`${componentCls}-ink`]: {\n          position: 'absolute',\n          bottom: 0,\n          transition: `left ${motionDurationSlow} ease-in-out, width ${motionDurationSlow} ease-in-out`,\n          height: lineWidthBold,\n          backgroundColor: colorPrimary\n        }\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Anchor', token => {\n  const {\n    fontSize,\n    fontSizeLG,\n    padding,\n    paddingXXS\n  } = token;\n  const anchorToken = mergeToken(token, {\n    holderOffsetBlock: paddingXXS,\n    anchorPaddingBlock: paddingXXS,\n    anchorPaddingBlockSecondary: paddingXXS / 2,\n    anchorPaddingInline: padding,\n    anchorTitleBlock: fontSize / 14 * 3,\n    anchorBallSize: fontSizeLG / 2\n  });\n  return [genSharedAnchorStyle(anchorToken), genSharedAnchorHorizontalStyle(anchorToken)];\n});","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport Affix from '../affix';\nimport { ConfigContext } from '../config-provider';\nimport getScroll from '../_util/getScroll';\nimport scrollTo from '../_util/scrollTo';\nimport warning from '../_util/warning';\nimport AnchorLink from './AnchorLink';\nimport AnchorContext from './context';\nimport useStyle from './style';\nfunction getDefaultContainer() {\n  return window;\n}\nfunction getOffsetTop(element, container) {\n  if (!element.getClientRects().length) {\n    return 0;\n  }\n  const rect = element.getBoundingClientRect();\n  if (rect.width || rect.height) {\n    if (container === window) {\n      container = element.ownerDocument.documentElement;\n      return rect.top - container.clientTop;\n    }\n    return rect.top - container.getBoundingClientRect().top;\n  }\n  return rect.top;\n}\nconst sharpMatcherRegex = /#([\\S ]+)$/;\nconst AnchorContent = props => {\n  var _a;\n  const {\n    rootClassName,\n    anchorPrefixCls: prefixCls,\n    className = '',\n    style,\n    offsetTop,\n    affix = true,\n    showInkInFixed = false,\n    children,\n    items,\n    direction: anchorDirection = 'vertical',\n    bounds,\n    targetOffset,\n    onClick,\n    onChange,\n    getContainer,\n    getCurrentAnchor\n  } = props;\n  // =================== Warning =====================\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!children, 'Anchor', '`Anchor children` is deprecated. Please use `items` instead.') : void 0;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(anchorDirection === 'horizontal' && (items === null || items === void 0 ? void 0 : items.some(n => 'children' in n))), 'Anchor', '`Anchor items#children` is not supported when `Anchor` direction is horizontal.') : void 0;\n  }\n  const [links, setLinks] = React.useState([]);\n  const [activeLink, setActiveLink] = React.useState(null);\n  const activeLinkRef = React.useRef(activeLink);\n  const wrapperRef = React.useRef(null);\n  const spanLinkNode = React.useRef(null);\n  const animating = React.useRef(false);\n  const {\n    direction,\n    getTargetContainer\n  } = React.useContext(ConfigContext);\n  const getCurrentContainer = (_a = getContainer !== null && getContainer !== void 0 ? getContainer : getTargetContainer) !== null && _a !== void 0 ? _a : getDefaultContainer;\n  const dependencyListItem = JSON.stringify(links);\n  const registerLink = React.useCallback(link => {\n    if (!links.includes(link)) {\n      setLinks(prev => [].concat(_toConsumableArray(prev), [link]));\n    }\n  }, [dependencyListItem]);\n  const unregisterLink = React.useCallback(link => {\n    if (links.includes(link)) {\n      setLinks(prev => prev.filter(i => i !== link));\n    }\n  }, [dependencyListItem]);\n  const updateInk = () => {\n    var _a;\n    const linkNode = (_a = wrapperRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`.${prefixCls}-link-title-active`);\n    if (linkNode && spanLinkNode.current) {\n      if (anchorDirection !== 'horizontal') {\n        spanLinkNode.current.style.top = `${linkNode.offsetTop + linkNode.clientHeight / 2}px`;\n        spanLinkNode.current.style.height = `${linkNode.clientHeight}px`;\n      } else {\n        spanLinkNode.current.style.left = `${linkNode.offsetLeft}px`;\n        spanLinkNode.current.style.width = `${linkNode.clientWidth}px`;\n        scrollIntoView(linkNode, {\n          scrollMode: 'if-needed',\n          block: 'nearest'\n        });\n      }\n    }\n  };\n  const getInternalCurrentAnchor = function (_links) {\n    let _offsetTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let _bounds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n    const linkSections = [];\n    const container = getCurrentContainer();\n    _links.forEach(link => {\n      const sharpLinkMatch = sharpMatcherRegex.exec(link === null || link === void 0 ? void 0 : link.toString());\n      if (!sharpLinkMatch) {\n        return;\n      }\n      const target = document.getElementById(sharpLinkMatch[1]);\n      if (target) {\n        const top = getOffsetTop(target, container);\n        if (top < _offsetTop + _bounds) {\n          linkSections.push({\n            link,\n            top\n          });\n        }\n      }\n    });\n    if (linkSections.length) {\n      const maxSection = linkSections.reduce((prev, curr) => curr.top > prev.top ? curr : prev);\n      return maxSection.link;\n    }\n    return '';\n  };\n  const setCurrentActiveLink = link => {\n    if (activeLinkRef.current === link) {\n      return;\n    }\n    // https://github.com/ant-design/ant-design/issues/30584\n    const newLink = typeof getCurrentAnchor === 'function' ? getCurrentAnchor(link) : link;\n    setActiveLink(newLink);\n    activeLinkRef.current = newLink;\n    // onChange should respect the original link (which may caused by\n    // window scroll or user click), not the new link\n    onChange === null || onChange === void 0 ? void 0 : onChange(link);\n  };\n  const handleScroll = React.useCallback(() => {\n    if (animating.current) {\n      return;\n    }\n    if (typeof getCurrentAnchor === 'function') {\n      return;\n    }\n    const currentActiveLink = getInternalCurrentAnchor(links, targetOffset !== undefined ? targetOffset : offsetTop || 0, bounds);\n    setCurrentActiveLink(currentActiveLink);\n  }, [dependencyListItem, targetOffset, offsetTop]);\n  const handleScrollTo = React.useCallback(link => {\n    setCurrentActiveLink(link);\n    const container = getCurrentContainer();\n    const scrollTop = getScroll(container, true);\n    const sharpLinkMatch = sharpMatcherRegex.exec(link);\n    if (!sharpLinkMatch) {\n      return;\n    }\n    const targetElement = document.getElementById(sharpLinkMatch[1]);\n    if (!targetElement) {\n      return;\n    }\n    const eleOffsetTop = getOffsetTop(targetElement, container);\n    let y = scrollTop + eleOffsetTop;\n    y -= targetOffset !== undefined ? targetOffset : offsetTop || 0;\n    animating.current = true;\n    scrollTo(y, {\n      getContainer: getCurrentContainer,\n      callback() {\n        animating.current = false;\n      }\n    });\n  }, [targetOffset, offsetTop]);\n  const wrapperClass = classNames(rootClassName, `${prefixCls}-wrapper`, {\n    [`${prefixCls}-wrapper-horizontal`]: anchorDirection === 'horizontal',\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className);\n  const anchorClass = classNames(prefixCls, {\n    [`${prefixCls}-fixed`]: !affix && !showInkInFixed\n  });\n  const inkClass = classNames(`${prefixCls}-ink`, {\n    [`${prefixCls}-ink-visible`]: activeLink\n  });\n  const wrapperStyle = Object.assign({\n    maxHeight: offsetTop ? `calc(100vh - ${offsetTop}px)` : '100vh'\n  }, style);\n  const createNestedLink = options => Array.isArray(options) ? options.map(item => /*#__PURE__*/React.createElement(AnchorLink, Object.assign({}, item, {\n    key: item.key\n  }), anchorDirection === 'vertical' && createNestedLink(item.children))) : null;\n  const anchorContent = /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: wrapperClass,\n    style: wrapperStyle\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: anchorClass\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: inkClass,\n    ref: spanLinkNode\n  }), 'items' in props ? createNestedLink(items) : children));\n  React.useEffect(() => {\n    const scrollContainer = getCurrentContainer();\n    handleScroll();\n    scrollContainer === null || scrollContainer === void 0 ? void 0 : scrollContainer.addEventListener('scroll', handleScroll);\n    return () => {\n      scrollContainer === null || scrollContainer === void 0 ? void 0 : scrollContainer.removeEventListener('scroll', handleScroll);\n    };\n  }, [dependencyListItem]);\n  React.useEffect(() => {\n    if (typeof getCurrentAnchor === 'function') {\n      setCurrentActiveLink(getCurrentAnchor(activeLinkRef.current || ''));\n    }\n  }, [getCurrentAnchor]);\n  React.useEffect(() => {\n    updateInk();\n  }, [anchorDirection, getCurrentAnchor, dependencyListItem, activeLink]);\n  const memoizedContextValue = React.useMemo(() => ({\n    registerLink,\n    unregisterLink,\n    scrollTo: handleScrollTo,\n    activeLink,\n    onClick,\n    direction: anchorDirection\n  }), [activeLink, onClick, handleScrollTo, anchorDirection]);\n  return /*#__PURE__*/React.createElement(AnchorContext.Provider, {\n    value: memoizedContextValue\n  }, affix ? /*#__PURE__*/React.createElement(Affix, {\n    offsetTop: offsetTop,\n    target: getCurrentContainer\n  }, anchorContent) : anchorContent);\n};\nconst Anchor = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const anchorPrefixCls = getPrefixCls('anchor', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(anchorPrefixCls);\n  return wrapSSR( /*#__PURE__*/React.createElement(AnchorContent, Object.assign({}, props, {\n    rootClassName: classNames(hashId, rootClassName),\n    anchorPrefixCls: anchorPrefixCls\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Anchor.displayName = 'Anchor';\n}\nexport default Anchor;","import InternalAnchor from './Anchor';\nimport AnchorLink from './AnchorLink';\nconst Anchor = InternalAnchor;\nAnchor.Link = AnchorLink;\nexport default Anchor;","// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n/**\n * This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\n * @public\n */\nexport type ScrollMode = 'always' | 'if-needed'\n\n/** @public */\nexport interface Options {\n  /**\n   * Control the logical scroll position on the y-axis. The spec states that the `block` direction is related to the [writing-mode](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode), but this is not implemented yet in this library.\n   * This means that `block: 'start'` aligns to the top edge and `block: 'end'` to the bottom.\n   * @defaultValue 'center'\n   */\n  block?: ScrollLogicalPosition\n  /**\n   * Like `block` this is affected by the [writing-mode](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode). In left-to-right pages `inline: 'start'` will align to the left edge. In right-to-left it should be flipped. This will be supported in a future release.\n   * @defaultValue 'nearest'\n   */\n  inline?: ScrollLogicalPosition\n  /**\n   * This is a proposed addition to the spec that you can track here: https://github.com/w3c/csswg-drafts/pull/5677\n   *\n   * This library will be updated to reflect any changes to the spec and will provide a migration path.\n   * To be backwards compatible with `Element.scrollIntoViewIfNeeded` if something is not 100% visible it will count as \"needs scrolling\". If you need a different visibility ratio your best option would be to implement an [Intersection Observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API).\n   * @defaultValue 'always'\n   */\n  scrollMode?: ScrollMode\n  /**\n   * By default there is no boundary. All the parent elements of your target is checked until it reaches the viewport ([`document.scrollingElement`](https://developer.mozilla.org/en-US/docs/Web/API/document/scrollingElement)) when calculating layout and what to scroll.\n   * By passing a boundary you can short-circuit this loop depending on your needs:\n   * \n   * - Prevent the browser window from scrolling.\n   * - Scroll elements into view in a list, without scrolling container elements.\n   * \n   * You can also pass a function to do more dynamic checks to override the scroll scoping:\n   * \n   * ```js\n   * let actions = compute(target, {\n   *   boundary: (parent) => {\n   *     // By default `overflow: hidden` elements are allowed, only `overflow: visible | clip` is skipped as\n   *     // this is required by the CSSOM spec\n   *     if (getComputedStyle(parent)['overflow'] === 'hidden') {\n   *       return false\n   *     }\n\n   *     return true\n   *   },\n   * })\n   * ```\n   * @defaultValue null\n   */\n  boundary?: Element | ((parent: Element) => boolean) | null\n  /**\n   * New option that skips auto-scrolling all nodes with overflow: hidden set\n   * See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\n   * @defaultValue false\n   * @public\n   */\n  skipOverflowHiddenElements?: boolean\n}\n\n/** @public */\nexport interface ScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nlet isElement = (el: any): el is Element =>\n  typeof el === 'object' && el != null && el.nodeType === 1\n\nlet canOverflow = (\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) => {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nlet getFrameElement = (el: Element) => {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nlet isHiddenByFrame = (el: Element): boolean => {\n  let frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nlet isScrollable = (el: Element, skipOverflowHiddenElements?: boolean) => {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    let style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nlet alignNearest = (\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) => {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nlet getParentElement = (element: Node): Element | null => {\n  let parent = element.parentElement\n  if (parent == null) {\n    return (element.getRootNode() as ShadowRoot).host || null\n  }\n  return parent\n}\n\n/** @public */\nexport default (target: Element, options: Options): ScrollAction[] => {\n  if (typeof document === 'undefined') {\n    // If there's no DOM we assume it's not in a browser environment\n    return []\n  }\n\n  let { scrollMode, block, inline, boundary, skipOverflowHiddenElements } =\n    options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  let checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  let scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  let frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = getParentElement(cursor)\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  let viewportWidth = window.visualViewport?.width ?? innerWidth\n  let viewportHeight = window.visualViewport?.height ?? innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  let viewportX = window.scrollX ?? pageXOffset\n  let viewportY = window.scrollY ?? pageYOffset\n\n  let {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  let computations: ScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    let frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    let { height, width, top, right, bottom, left } =\n      frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    let frameStyle = getComputedStyle(frame)\n    let borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    let borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    let borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    let borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    let scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    let scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    let scaleX =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth === 0\n          ? 0\n          : width / (frame as HTMLElement).offsetWidth\n        : 0\n    let scaleY =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight === 0\n          ? 0\n          : height / (frame as HTMLElement).offsetHeight\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      let { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll / scaleY,\n          frame.scrollHeight - height / scaleY + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll / scaleX,\n          frame.scrollWidth - width / scaleX + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n","import compute from 'compute-scroll-into-view'\nimport type {\n  Options as BaseOptions,\n  ScrollAction,\n} from 'compute-scroll-into-view'\n\n/** @public */\nexport type Options<T = unknown> =\n  | StandardBehaviorOptions\n  | CustomBehaviorOptions<T>\n\n/** @public */\nexport interface StandardBehaviorOptions extends BaseOptions {\n  /**\n   * @defaultValue 'auto\n   */\n  behavior?: ScrollBehavior\n}\n\n/** @public */\nexport interface CustomBehaviorOptions<T = unknown> extends BaseOptions {\n  behavior: CustomScrollBehaviorCallback<T>\n}\n\n/** @public */\nexport type CustomScrollBehaviorCallback<T = unknown> = (\n  actions: ScrollAction[]\n) => T\n\nlet isStandardScrollBehavior = (\n  options: any\n): options is StandardBehaviorOptions =>\n  options === Object(options) && Object.keys(options).length !== 0\n\nlet isCustomScrollBehavior = <T = unknown>(\n  options: any\n): options is CustomBehaviorOptions<T> =>\n  typeof options === 'object' ? typeof options.behavior === 'function' : false\n\nlet getOptions = (options: any): StandardBehaviorOptions => {\n  // Handle alignToTop for legacy reasons, to be compatible with the spec\n  if (options === false) {\n    return { block: 'end', inline: 'nearest' }\n  }\n\n  if (isStandardScrollBehavior(options)) {\n    // compute.ts ensures the defaults are block: 'center' and inline: 'nearest', to conform to the spec\n    return options\n  }\n\n  // if options = {}, options = true or options = null, based on w3c web platform test\n  return { block: 'start', inline: 'nearest' }\n}\n\n// Some people might use both \"auto\" and \"ponyfill\" modes in the same file, so we also provide a named export so\n// that imports in userland code (like if they use native smooth scrolling on some browsers, and the ponyfill for everything else)\n// the named export allows this `import {auto as autoScrollIntoView, ponyfill as smoothScrollIntoView} from ...`\n/** @public */\nexport default function scrollIntoView<T>(\n  target: Element,\n  options: CustomBehaviorOptions<T>\n): T\n/** @public */\nexport default function scrollIntoView(\n  target: Element,\n  options?: StandardBehaviorOptions | boolean\n): void\n/** @public */\nexport default function scrollIntoView<T = unknown>(\n  target: Element,\n  options?: StandardBehaviorOptions | CustomBehaviorOptions<T> | boolean\n): T | void {\n  // Browsers treats targets that aren't in the dom as a no-op and so should we\n  let isTargetAttached =\n    target.isConnected ||\n    target.ownerDocument!.documentElement!.contains(target)\n\n  if (isCustomScrollBehavior<T>(options)) {\n    return options.behavior(isTargetAttached ? compute(target, options) : [])\n  }\n\n  // Don't do anything if using a standard behavior on an element that is not in the document\n  if (!isTargetAttached) {\n    return\n  }\n\n  // @TODO see if it's possible to avoid this assignment\n  let computeOptions = getOptions(options)\n  let actions = compute(target, computeOptions)\n  let canSmoothScroll = 'scrollBehavior' in document.body.style\n\n  actions.forEach(({ el, top, left }) => {\n    // browser implements the new Element.prototype.scroll API that supports `behavior`\n    // and guard window.scroll with supportsScrollBehavior\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({ top, left, behavior: computeOptions.behavior })\n    } else {\n      el.scrollTop = top\n      el.scrollLeft = left\n    }\n  })\n}\n"],"names":["isWindow","obj","undefined","window","getScroll","target","top","_a","_b","method","result","Document","documentElement","HTMLElement","ownerDocument","easeInOutCubic","t","b","c","d","cc","scrollTo","y","options","arguments","length","getContainer","callback","duration","container","scrollTop","startTime","Date","now","frameFunc","time","nextScrollTop","pageXOffset","constructor","name","raf","React","props","href","title","customizePrefixCls","prefixCls","children","className","AnchorContext","registerLink","unregisterLink","onClick","activeLink","direction","handleClick","e","ConfigConsumer","_ref","getPrefixCls","active","wrapperClassName","classNames","titleClassName","genSharedAnchorStyle","token","componentCls","holderOffsetBlock","motionDurationSlow","lineWidthBold","colorPrimary","lineType","colorSplit","marginBlockStart","paddingBlockStart","backgroundColor","Object","assign","resetComponent","position","paddingInlineStart","paddingBlock","anchorPaddingBlock","paddingInline","anchorPaddingInline","textEllipsis","display","marginBlockEnd","anchorTitleBlock","color","colorText","transition","anchorPaddingBlockSecondary","left","_skip_check_","value","height","borderInlineStart","content","transform","width","genSharedAnchorHorizontalStyle","right","bottom","borderBottom","overflowX","scrollbarWidth","genComponentStyleHook","fontSize","fontSizeLG","padding","paddingXXS","anchorToken","mergeToken","anchorBallSize","getDefaultContainer","getOffsetTop","element","getClientRects","rect","getBoundingClientRect","clientTop","sharpMatcherRegex","AnchorContent","rootClassName","anchorPrefixCls","style","offsetTop","affix","showInkInFixed","items","anchorDirection","bounds","targetOffset","onChange","getCurrentAnchor","links","setLinks","setActiveLink","activeLinkRef","wrapperRef","spanLinkNode","animating","ConfigContext","getTargetContainer","getCurrentContainer","dependencyListItem","JSON","stringify","link","includes","prev","concat","_toConsumableArray","filter","i","setCurrentActiveLink","current","newLink","handleScroll","currentActiveLink","_links","_offsetTop","_bounds","linkSections","forEach","sharpLinkMatch","exec","toString","document","getElementById","push","reduce","curr","getInternalCurrentAnchor","handleScrollTo","targetElement","wrapperClass","anchorClass","inkClass","wrapperStyle","maxHeight","anchorContent","ref","createNestedLink","Array","isArray","map","item","AnchorLink","key","scrollContainer","addEventListener","removeEventListener","linkNode","querySelector","clientHeight","offsetLeft","clientWidth","scrollIntoView","scrollMode","block","updateInk","memoizedContextValue","Affix","Anchor","useStyle","wrapSSR","hashId","Link","isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","scrollHeight","scrollWidth","getComputedStyle","overflowY","defaultView","frameElement","frame","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","getParentElement","parent","parentElement","getRootNode","host","inline","boundary","checkBoundary","node","TypeError","scrollingElement","frames","cursor","body","viewportWidth","visualViewport","viewportHeight","_d","viewportX","_e","viewportY","_f","pageYOffset","targetHeight","targetWidth","targetTop","targetRight","targetBottom","targetLeft","targetBlock","targetInline","computations","index","borderLeft","parseInt","frameStyle","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottomWidth","blockScroll","inlineScroll","offsetWidth","scrollbarHeight","offsetHeight","scaleX","scaleY","Math","max","scrollLeft","min","isTargetAttached","isConnected","contains","behavior","compute","keys","getOptions","actions","computeOptions","canSmoothScroll","scroll"],"sourceRoot":""}