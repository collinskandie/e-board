{"version":3,"file":"static/js/7157.9fb59ab6.chunk.js","mappings":"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","sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/Card/index.js","components/shared-components/ChartWidget/index.js","components/shared-components/CustomStatistic/index.js","components/shared-components/DataDisplayWidget/index.js","components/shared-components/DonutChartWidget/index.js","components/shared-components/Flex/index.js","constants/ChartConstant.js","constants/DateConstant.js","utils/index.js","views/app-views/dashboards/sales/SalesDashboardData.js","views/app-views/dashboards/sales/index.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import { Card as AntdCard } from 'antd';\r\n\r\n\r\nconst Card = ({style, ...rest}) => {\r\n    return (\r\n        <AntdCard style={{ marginBottom: 20 }} {...rest} />\r\n    )\r\n}\r\n\r\nexport default Card","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from 'components/shared-components/Card';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\r\n\tlet options = JSON.parse(JSON.stringify(getChartTypeDefaultOption(type)))\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif(direction === DIR_RTL) {\r\n\t\t\t\tlengend.style.right = 'auto'\r\n\t\t\t\tlengend.style.left = '0'\r\n\t\t\t}\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\t\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst { ref: resizeRef } = useResizeDetector({\r\n\t\tonResize: () => {\r\n\t\t\tonResize()\r\n\t\t}\r\n\t});\r\n\r\n\tconst renderChart = () => (\r\n\t\t<div ref={resizeRef}>\r\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart()\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Value = props => {\r\n\tlet value;\r\n\tswitch(props.size) {\r\n\t\tcase 'lg':\r\n\t\t\tvalue = <h1 className=\"mb-0 font-weight-bold\">{props.value}</h1>\r\n\t\t\tbreak;\r\n\t\tcase 'md':\r\n\t\t\tvalue = <h2 className=\"mb-0 font-weight-bold\">{props.value}</h2>\r\n\t\t\tbreak;\r\n\t\tcase 'sm':\r\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\r\n\t}\r\n\treturn value\r\n}\r\n\r\nexport const CustomStatistic = props => {\r\n\tconst { size, value, title } = props;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Value value={value} size={size}/>\r\n\t\t\t<p className=\"mb-0 text-muted\">{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCustomStatistic.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tsize: PropTypes.string,\r\n\tvalue: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n}\r\n\r\nCustomStatistic.defaultProps = {\r\n\tsize: 'md'\r\n};\r\n\r\n\r\nexport default CustomStatistic\r\n","import React from 'react'\r\nimport { Card, Avatar } from 'antd'\r\nimport Flex from '../Flex'\r\nimport CustomStatistic from '../CustomStatistic'\r\n\r\nconst DataDisplayWidget = props => {\r\n\tconst { size, value, title, icon, color, avatarSize, vertical } = props\r\n\tconst customStatisticProps = { size, value, title }\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" flexDirection={vertical ? 'column' : 'row'}>\r\n\t\t\t\t<Avatar size={avatarSize} shape=\"square\" icon={icon} className={`ant-avatar-${color}`}/>\r\n\t\t\t\t<div className={vertical ? 'mt-3 text-center' : 'ml-3'}>\r\n\t\t\t\t\t<CustomStatistic {...customStatisticProps}/>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDataDisplayWidget.defaultProps = {\r\n\tavatarSize: 50,\r\n\tvertical: false\r\n};\r\n\r\nexport default DataDisplayWidget\r\n","import React from 'react'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexPieChartDefaultOption } from 'constants/ChartConstant';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst defaultOption = apexPieChartDefaultOption;\r\n\r\nconst Chart = props => {\r\n\treturn (\r\n\t\t<ApexChart {...props} />\r\n\t)\r\n}\r\n\r\nconst DonutChartWidget = props => {\r\n\tconst { series, customOptions, labels, width, height, title, extra, bodyClass } = props\r\n\tlet options = JSON.parse(JSON.stringify(defaultOption))\r\n\toptions.labels = labels\r\n\toptions.plotOptions.pie.donut.labels.total.label = title\r\n\tif(!title) {\r\n\t\toptions.plotOptions.pie.donut.labels.show = false\r\n\t}\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div className={`text-center ${bodyClass}`}>\r\n\t\t\t\t<Chart type=\"donut\" options={options} series={series} width={width} height={height} />\r\n\t\t\t\t{extra}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDonutChartWidget.propTypes = {\r\n\tseries: PropTypes.array.isRequired,\r\n\tlabels: PropTypes.array,\r\n\ttitle: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nDonutChartWidget.defaultProps = {\r\n\tseries: [],\r\n\tlabels: [],\r\n\ttitle: '',\r\n\theight: 250,\r\n\twidth: '100%'\r\n};\r\n\r\nexport default DonutChartWidget\r\n","import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","export const DATE_FORMAT_YYYYMMdd = \"YYYYMMdd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd = \"YYYY-MM-dd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_Combined = \"YYYYMMddHHmm\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_HH_mm = \"YYYY-MM-dd HH:mm\";\r\nexport const DATE_FORMAT_DD_MM_YYYY = \"DD-MM-YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_DOT = \"DD.MM.YYYY\";\r\nexport const DATE_FORMAT_mm_dd_YYYY_WITH_SLASH = \"MM/dd/YYYY\";\r\nexport const DATE_FORMAT_m_d_YYYY_WITH_SLASH = \"M/d/YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_SLASH = \"DD/MM/YYYY\";\r\nexport const DATE_FORMAT_dd_MMM = \"ddMMM\";\r\nexport const DATE_FORMAT_dd_MM_yy = \"ddMMyy\";\r\nexport const DATE_FORMAT_dd_MMM_YYYY = \"ddMMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_COMBINED = \"DDMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss = \"YYYY-MM-dd'T'HH:mm:ss\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss_sz = \"YYYY-MM-dd'T'HH:mm:ss.SSS\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm = \"dd-MM-YYYY HH:mm\";\r\nexport const DATE_FORMAT_HH_mm = \"HH:mm\";\r\nexport const DATE_FORMAT_YYYY_MM_DDTHH_mm_ssZ = \"YYYY-MM-DD'T'HH:mm:ssZ\"; ","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import { COLORS } from 'constants/ChartConstant';\r\n\r\nexport const weeklyRevenueData = {\r\n\tseries: [\r\n\t  {\r\n\t\tname: 'Earning',\r\n\t\tdata: [45, 52, 38, 24, 33, 26, 21]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '08 Jul', \r\n\t  '09 Jul', \r\n\t  '10 Jul', \r\n\t  '11 Jul', \r\n\t  '12 Jul', \r\n\t  '13 Jul', \r\n\t  '14 Jul'\r\n\t]\r\n}\r\n\r\nexport const topProductData = [\r\n\t{\r\n\t\tname: 'Blue Jacket',\r\n\t\timage: '/img/thumbs/thumb-7.jpg',\r\n\t\tcategory: 'Cloths',\r\n\t\tsales: 5930,\r\n\t\tstatus: 'up'\r\n\t},\r\n\t{\r\n\t\tname: 'White Sneaker',\r\n\t\timage: '/img/thumbs/thumb-12.jpg',\r\n\t\tcategory: 'Cloths',\r\n\t\tsales: 5177,\r\n\t\tstatus: 'up'\r\n\t},\r\n\t{\r\n\t\tname: 'Red Beat Headphone',\r\n\t\timage: '/img/thumbs/thumb-14.jpg',\r\n\t\tcategory: 'Devices',\r\n\t\tsales: 4701,\r\n\t\tstatus: 'down'\r\n\t},\r\n\t{\r\n\t\tname: 'Apple Watch',\r\n\t\timage: '/img/thumbs/thumb-17.jpg',\r\n\t\tcategory: 'Devices',\r\n\t\tsales: 2833,\r\n\t\tstatus: 'up'\r\n\t},\r\n\t{\r\n\t\tname: 'Blue Backpack',\r\n\t\timage: '/img/thumbs/thumb-11.jpg',\r\n\t\tcategory: 'Bags',\r\n\t\tsales: 1692,\r\n\t\tstatus: 'down'\r\n\t},\r\n]\r\n\r\nexport const customerChartData = [\r\n\t{\r\n\t\tname: 'Store Customers',\r\n\t\tdata: [28, 25, 64, 40, 75, 45, 70]\r\n\t},\r\n\t{\r\n\t\tname: 'Online Customers',\r\n\t\tdata: [25, 15, 41, 25, 44, 12, 36]\r\n\t}\r\n]\r\n\r\nexport const sessionColor = [COLORS[0], COLORS[1], COLORS[3], COLORS[5]]\r\nexport const sessionData = [3561, 1443, 2462, 1693]\r\nexport const sessionLabels = ['Cloths', 'Devices', 'Bags', 'Watches']\r\nconst jointSessionData = () => {\r\n\tlet arr = []\r\n\tfor (let i = 0; i < sessionData.length; i++) {\r\n\t\tconst data = sessionData[i];\r\n\t\tconst label = sessionLabels[i];\r\n\t\tconst color = sessionColor[i]\r\n\t\tarr = [...arr, {\r\n\t\t\tdata: data,\r\n\t\t\tlabel: label,\r\n\t\t\tcolor: color\r\n\t\t}]\r\n\t}\r\n\treturn arr\r\n}\r\nexport const conbinedSessionData = jointSessionData()\r\n\r\nexport const recentOrderData = [\r\n\t{\r\n\t\tid: '#5331',\r\n\t\tname: 'Eileen Horton',\r\n\t\timage: '/img/avatars/thumb-1.jpg',\r\n\t\tdate: 1573430400,\r\n\t\tamount: 677,\r\n\t\tpaymentStatus: 'Paid',\r\n\t\torderStatus: 'Ready'\r\n\t},\r\n\t{\r\n\t\tid: '#5328',\r\n\t\tname: 'Terrance Moreno',\r\n\t\timage: '/img/avatars/thumb-2.jpg',\r\n\t\tdate: 1572393600,\r\n\t\tamount: 1328.35,\r\n\t\tpaymentStatus: 'Paid',\r\n\t\torderStatus: 'Ready'\r\n\t},\r\n\t{\r\n\t\tid: '#5321',\r\n\t\tname: 'Ron Vargas',\r\n\t\timage: '/img/avatars/thumb-3.jpg',\r\n\t\tdate: 1593949805,\r\n\t\tamount: 629,\r\n\t\tpaymentStatus: 'Paid',\r\n\t\torderStatus: 'Shipped'\r\n\t},\r\n\t{\r\n\t\tid: '#5287',\r\n\t\tname: 'Luke Cook',\r\n\t\timage: '/img/avatars/thumb-4.jpg',\r\n\t\tdate: 1579132800,\r\n\t\tamount: 25.9,\r\n\t\tpaymentStatus: 'Paid',\r\n\t\torderStatus: 'Shipped'\r\n\t},\r\n\t{\r\n\t\tid: '#5351',\r\n\t\tname: 'Joyce Freeman',\r\n\t\timage: '/img/avatars/thumb-5.jpg',\r\n\t\tdate: 1591286400,\r\n\t\tamount: 817.5,\r\n\t\tpaymentStatus: 'Pending',\r\n\t\torderStatus: 'Ready'\r\n\t},\r\n]","import React from \"react\";\r\nimport { Row, Col, Button, Card, Table, Tag, Select, Badge } from 'antd';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport DataDisplayWidget from 'components/shared-components/DataDisplayWidget';\r\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget'\r\nimport NumberFormat from 'react-number-format';\r\nimport { \r\n\tCloudDownloadOutlined, \r\n\tArrowUpOutlined,\r\n\tArrowDownOutlined,\r\n\tUserSwitchOutlined,\r\n\tFileDoneOutlined,\r\n\tSyncOutlined,\r\n\tBarChartOutlined\r\n} from '@ant-design/icons';\r\nimport ChartWidget from 'components/shared-components/ChartWidget';\r\nimport { COLORS } from 'constants/ChartConstant';\r\nimport { \r\n\tweeklyRevenueData, \r\n\ttopProductData, \r\n\tcustomerChartData,\r\n\tsessionData, \r\n  sessionLabels, \r\n  conbinedSessionData,\r\n\tsessionColor,\r\n\trecentOrderData\r\n} from './SalesDashboardData'\r\nimport dayjs from 'dayjs'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\nimport utils from 'utils'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst { Option } = Select;\r\n\r\nconst getPaymentStatus = status => {\r\n\tif(status === 'Paid') {\r\n\t\treturn 'success'\r\n\t}\r\n\tif(status === 'Pending') {\r\n\t\treturn 'warning'\r\n\t}\r\n\tif(status === 'Expired') {\r\n\t\treturn 'error'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst getShippingStatus = status => {\r\n\tif(status === 'Ready') {\r\n\t\treturn 'blue'\r\n\t}\r\n\tif(status === 'Shipped') {\r\n\t\treturn 'cyan'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst WeeklyRevenue = () => {\r\n\tconst { direction } = useSelector(state => state.theme)\r\n\treturn (<Card>\r\n\t\t<Row gutter={16}>\r\n\t\t\t<Col xs={24} sm={24} md={24} lg={8}>\r\n\t\t\t\t<Flex className=\"h-100\" flexDirection=\"column\" justifyContent=\"space-between\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4 className=\"mb-0\">Weekly Revenue</h4>\r\n\t\t\t\t\t\t<span className=\"text-muted\">8 - 15 Jul, 2020</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t<h1 className=\"font-weight-bold\">$27,188.00</h1>\r\n\t\t\t\t\t\t<p className=\"text-success\">\r\n\t\t\t\t\t\t\t<span >\r\n\t\t\t\t\t\t\t\t<ArrowUpOutlined />\r\n\t\t\t\t\t\t\t\t<span> 17% </span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span>growth from last week</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>Total gross income figure based from the date range given above.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Col>\r\n\t\t\t<Col xs={24} sm={24} md={24} lg={16}>\r\n\t\t\t\t<div className=\"mb-3 text-right\">\r\n\t\t\t\t\t<Button icon={<CloudDownloadOutlined/>}>Download Report</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ChartWidget \r\n\t\t\t\t\tcard={false}\r\n\t\t\t\t\tseries={weeklyRevenueData.series} \r\n\t\t\t\t\txAxis={weeklyRevenueData.categories} \r\n\t\t\t\t\ttitle=\"Unique Visitors\"\r\n\t\t\t\t\theight={250}\r\n\t\t\t\t\ttype=\"bar\"\r\n\t\t\t\t\tcustomOptions={{colors: COLORS}}\r\n\t\t\t\t\tdirection={direction}\r\n\t\t\t\t/>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t</Card>)\r\n}\r\n\r\nconst DisplayDataSet = () => (\r\n\t<Row gutter={16}>\r\n\t\t<Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n\t\t\t<DataDisplayWidget \r\n\t\t\t\ticon={<FileDoneOutlined />} \r\n\t\t\t\tvalue=\"11,831\"\r\n\t\t\t\ttitle=\"Total order\"\t\r\n\t\t\t\tcolor=\"cyan\"\r\n\t\t\t\tvertical={true}\r\n\t\t\t\tavatarSize={55}\r\n\t\t\t/>\r\n\t\t\t<DataDisplayWidget \r\n\t\t\t\ticon={<BarChartOutlined />} \r\n\t\t\t\tvalue=\"$6,922\"\r\n\t\t\t\ttitle=\"Total profit\"\t\r\n\t\t\t\tcolor=\"gold\"\r\n\t\t\t\tvertical={true}\r\n\t\t\t\tavatarSize={55}\r\n\t\t\t/>\r\n\t\t</Col>\r\n\t\t<Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n\t\t\t<DataDisplayWidget \r\n\t\t\t\ticon={<SyncOutlined />} \r\n\t\t\t\tvalue=\"26.9%\"\r\n\t\t\t\ttitle=\"Conversion rate\"\t\r\n\t\t\t\tcolor=\"blue\"\r\n\t\t\t\tvertical={true}\r\n\t\t\t\tavatarSize={55}\r\n\t\t\t/>\r\n\t\t\t<DataDisplayWidget \r\n\t\t\t\ticon={<UserSwitchOutlined />} \r\n\t\t\t\tvalue=\"873\"\r\n\t\t\t\ttitle=\"Daily visitors\"\t\r\n\t\t\t\tcolor=\"volcano\"\r\n\t\t\t\tvertical={true}\r\n\t\t\t\tavatarSize={55}\r\n\t\t\t/>\r\n\t\t</Col>\r\n\t</Row>\r\n)\r\n\r\nconst TopProduct = () => (\r\n\t<Card \r\n\t\ttitle=\"Top Product\" \r\n\t\textra={\r\n\t\t\t<Select defaultValue=\"week\" size=\"small\" style={{minWidth: 110}}>\r\n\t\t\t\t<Option value=\"week\">This Week</Option>\r\n\t\t\t\t<Option value=\"month\">This Month</Option>\r\n\t\t\t\t<Option value=\"year\">This Year</Option>\r\n\t\t\t</Select>\r\n\t\t}\r\n\t>\r\n\t\t{topProductData.map(elm => (\r\n\t\t\t<Flex className=\"w-100 py-3\" justifyContent=\"space-between\" alignItems=\"center\" key={elm.name}>\r\n\t\t\t\t<AvatarStatus shape=\"square\" src={elm.image} name={elm.name} subTitle={elm.category}/>\r\n\t\t\t\t<Flex>\r\n\t\t\t\t\t<div className=\"mr-3 text-right\">\r\n\t\t\t\t\t\t<span className=\"text-muted\">Sales</span>\r\n\t\t\t\t\t\t<div className=\"mb-0 h5 font-weight-bold\">\r\n\t\t\t\t\t\t\t<NumberFormat prefix={'$'} value={elm.sales} thousandSeparator={true} displayType=\"text\" />\r\n\t\t\t\t\t\t\t{elm.status === 'up' ? <ArrowUpOutlined className=\"text-success\"/> : <ArrowDownOutlined className=\"text-danger\"/>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t))}\r\n\t</Card>\r\n)\r\n\r\nconst SalesByCategory = () => (\r\n\t<DonutChartWidget \r\n\t\tseries={sessionData} \r\n\t\tlabels={sessionLabels} \r\n\t\ttitle=\"Sales by Category\"\r\n\t\tcustomOptions={{colors: sessionColor}}\r\n\t\tbodyClass=\"mb-2 mt-3\"\r\n\t\textra={\r\n\t\t\t<Row  justify=\"center\">\r\n\t\t\t\t<Col xs={20} sm={20} md={20} lg={24}>\r\n\t\t\t\t\t<div className=\"mt-4 mx-auto\" style={{maxWidth: 200}}>\r\n\t\t\t\t\t\t{conbinedSessionData.map(elm => (\r\n\t\t\t\t\t\t\t<Flex alignItems=\"center\" justifyContent=\"space-between\" className=\"mb-3\" key={elm.label}>\r\n\t\t\t\t\t\t\t\t<Flex gap={5}>\r\n\t\t\t\t\t\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-gray-light\">{elm.label}</span>\r\n\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-bold text-dark\">{elm.data}</span>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t}\r\n\t/>\r\n)\r\n\r\nconst Customers = () => {\r\n\tconst { direction } = useSelector(state => state.theme)\r\n\treturn (\r\n\t\t<Card \r\n\t\t\ttitle=\"Customers\"\r\n\t\t\textra={\r\n\t\t\t\t<Select defaultValue=\"week\" size=\"small\" style={{minWidth: 110}}>\r\n\t\t\t\t\t<Option value=\"week\">This Week</Option>\r\n\t\t\t\t\t<Option value=\"month\">This Month</Option>\r\n\t\t\t\t\t<Option value=\"year\">This Year</Option>\r\n\t\t\t\t</Select>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Flex>\r\n\t\t\t\t<div className=\"mr-5\">\r\n\t\t\t\t\t<h2 className=\"font-weight-bold mb-1\">523,201</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<Badge color={COLORS[6]}/>\r\n\t\t\t\t\t\t<span className=\"mx-2\">Store Customers</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2 className=\"font-weight-bold mb-1\">379,237</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<Badge color={COLORS[0]}/>\r\n\t\t\t\t\t\t<span className=\"mx-2\">Online Customers</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div>\r\n\t\t\t\t<ChartWidget \r\n\t\t\t\t\tcard={false}\r\n\t\t\t\t\tseries={customerChartData} \r\n\t\t\t\t\txAxis={weeklyRevenueData.categories}\r\n\t\t\t\t\theight={280}\r\n\t\t\t\t\tdirection={direction}\r\n\t\t\t\t\tcustomOptions={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolors: [COLORS[6], COLORS[0]],\r\n\t\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tstroke: {\r\n\t\t\t\t\t\t\t\twidth: 2.5,\r\n\t\t\t\t\t\t\t\tcurve: 'smooth'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nconst tableColumns = [\r\n\t{\r\n\t\ttitle: 'ID',\r\n\t\tdataIndex: 'id'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Product',\r\n\t\tdataIndex: 'name',\r\n\t\trender: (_, record) => (\r\n\t\t\t<Flex>\r\n\t\t\t\t<AvatarStatus size={30} src={record.image} name={record.name}/>\r\n\t\t\t</Flex>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Date',\r\n\t\tdataIndex: 'date',\r\n\t\trender: (_, record) => (\r\n\t\t\t<span>{dayjs.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)}</span>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'date')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Order status',\r\n\t\tdataIndex: 'orderStatus',\r\n\t\trender: (_, record) => (\r\n\t\t\t<><Tag color={getShippingStatus(record.orderStatus)}>{record.orderStatus}</Tag></>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment status',\r\n\t\tdataIndex: 'paymentStatus',\r\n\t\trender: (_, record) => (\r\n\t\t\t<>\r\n\t\t\t\t<Badge status={getPaymentStatus(record.paymentStatus)} />\r\n\t\t\t\t<span className=\"mx-2\">{record.paymentStatus}</span>\r\n\t\t\t</>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Total',\r\n\t\tdataIndex: 'amount',\r\n\t\trender: (_, record) => (\r\n\t\t\t<span className=\"font-weight-semibold\">\r\n\t\t\t\t<NumberFormat\r\n\t\t\t\t\tdisplayType={'text'} \r\n\t\t\t\t\tvalue={(Math.round(record.amount * 100) / 100).toFixed(2)} \r\n\t\t\t\t\tprefix={'$'} \r\n\t\t\t\t\tthousandSeparator={true} \r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\r\n\t}\r\n]\r\n\r\nconst RecentOrder = () => (\r\n\t<Card title=\"Recent Order\">\r\n\t\t<Table\r\n\t\t\tpagination={false}\r\n\t\t\tcolumns={tableColumns} \r\n\t\t\tdataSource={recentOrderData} \r\n\t\t\trowKey='id'\r\n\t\t/>\r\n\t</Card>\r\n)\r\n\r\nconst SalesDashboard = () => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={16} xl={15} xxl={14}>\r\n\t\t\t\t\t<WeeklyRevenue />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={8} xl={9} xxl={10}>\r\n\t\t\t\t\t<DisplayDataSet />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={7} >\r\n\t\t\t\t\t<TopProduct />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={7}>\r\n\t\t\t\t\t<SalesByCategory />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={10}>\r\n\t\t\t\t\t<Customers />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={24}>\r\n\t\t\t\t\t<RecentOrder />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SalesDashboard\r\n"],"names":["renderAvatar","props","className","type","text","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","style","rest","marginBottom","titleStyle","position","zIndex","extraStyle","right","top","ChartWidget","title","series","width","height","xAxis","customOptions","card","extra","direction","bodyClass","options","JSON","parse","stringify","apexLineChartDefaultOption","apexBarChartDefaultOption","apexAreaChartDefaultOption","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","marginRight","extraRef","offsetWidth","DIR_RTL","left","justifyContent","padding","useEffect","useRef","xaxis","categories","resizeRef","useResizeDetector","onResize","setTimeout","ref","renderChart","defaultProps","Value","value","CustomStatistic","DataDisplayWidget","color","avatarSize","vertical","customStatisticProps","alignItems","flexDirection","defaultOption","apexPieChartDefaultOption","Chart","DonutChartWidget","labels","plotOptions","pie","donut","total","label","show","Flex","styled","margin","baseStyle","display","COLOR_1","COLOR_2","COLOR_4","COLOR_1_LIGHT","COLOR_2_LIGHT","COLORS","COLOR_AXES","COLOR_TEXT","chart","zoom","enabled","toolbar","colors","dataLabels","stroke","curve","lineCap","legend","horizontalAlign","offsetY","itemMargin","tooltipHoverFormatter","val","opts","w","globals","seriesIndex","dataPointIndex","grid","lines","yaxis","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","showAlways","fontSize","fontFamily","fontWeight","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","sparkline","fixed","x","seriesName","marker","DATE_FORMAT_DD_MM_YYYY","Utils","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","data","filter","item","input","searchText","screens","breakpoints","push","weeklyRevenueData","topProductData","image","category","sales","status","customerChartData","sessionColor","sessionData","sessionLabels","conbinedSessionData","arr","jointSessionData","recentOrderData","date","amount","paymentStatus","orderStatus","Option","Select","WeeklyRevenue","useSelector","state","theme","gutter","xs","sm","md","lg","ArrowUpOutlined","CloudDownloadOutlined","DisplayDataSet","xl","xxl","FileDoneOutlined","BarChartOutlined","SyncOutlined","UserSwitchOutlined","TopProduct","defaultValue","minWidth","map","elm","AvatarStatus","prefix","thousandSeparator","displayType","ArrowDownOutlined","SalesByCategory","justify","maxWidth","Customers","tableColumns","dataIndex","render","_","record","sorter","utils","dayjs","format","RecentOrder","pagination","columns","dataSource","rowKey"],"sourceRoot":""}