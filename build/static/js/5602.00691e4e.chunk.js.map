{"version":3,"file":"static/js/5602.00691e4e.chunk.js","mappings":"qHAEMA,E,SAAOC,EAAAA,KAAW,YAAwE,IAAtEC,EAAc,EAAdA,eAAgBC,EAAU,EAAVA,WAAYC,EAAa,EAAbA,cAAeC,EAAG,EAAHA,IAAKC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAE5EC,EAAY,CACjBC,QAAS,OACTP,eAAgBA,EAChBC,WAAYA,EACZE,IAAoB,kBAARA,EAAgB,UAAMA,EAAG,MAAOA,GAe7C,OAZID,IACHI,EAAUJ,cAAgBA,GAGvBE,IACHE,EAAUF,QAAUA,GAGjBC,IACHC,EAAUD,OAASA,IAGb,UAAIC,EACZ,IAEA,K,g41GCdQE,EAAkBC,EAAAA,GAAAA,cAEpBC,EAAW,UAGXC,EAAuB,SAACC,EAAMC,GACnC,GAAGA,EAAKC,OAAS,GAAKF,EAAM,CAC3B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAKC,OAAQC,IAAK,CACrC,IAAMC,EAAMH,EAAKE,GACjB,GAAGH,IAASI,EAAIJ,KACf,OAAOI,EAAIC,KAEb,CACA,OAAOP,CACR,CACA,OAAOA,CACR,EAEMQ,EAAsB,SAACN,EAAMC,GAClC,GAAGA,EAAKC,OAAS,GAAKF,EAAM,CAC3B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAKC,OAAQC,IAAK,CACrC,IAAMC,EAAMH,EAAKE,GACjB,GAAGH,IAASI,EAAIJ,KACf,OAAOO,EAAAA,EAAAA,WAAiBH,EAAIC,OApBR,GAsBtB,CACA,OAAOE,EAAAA,EAAAA,WAAiBT,GAvBF,GAwBvB,CACA,OAAOS,EAAAA,EAAAA,WAAiBT,GAzBD,GA0BxB,EAeMU,EAAW,SAAH,GAAyD,IAAnDC,EAAiB,EAAjBA,kBAAmBR,EAAI,EAAJA,KAAMS,EAAS,EAATA,UAAWC,EAAO,EAAPA,QACrD,OACD,SAAC,EAAAC,cAAa,CAACC,MAAO,CAACC,UAAU,GAAD,OAAiB,UAAZH,EAAsB,mBAAqB,SAAW,WAAS,GAAGI,OAAQ,IAAKC,iBAAkB,CAAEC,MAAO,KAAM,UACpJ,SAAC,EAAAC,YAAW,CAACC,UAAWT,EAAU,SAChC,YAAc,SAAXU,YACSC,KAAI,SAAAC,GACf,IAAMC,EAAsB,UAAZZ,EAAsBW,EAAIE,WAAWxB,KAAOsB,EAAIE,WAAWC,OAC3E,OACC,SAAC,EAAAC,UAAS,CAETP,UAAWG,EACXK,aAAc,WACblB,EAzBc,SAACT,EAAMC,GAC7B,GAAGA,EAAKC,OAAS,GAAKF,EAAM,CAC3B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAKC,OAAQC,IAAK,CACrC,IAAMC,EAAMH,EAAKE,GACjB,GAAGH,IAASI,EAAIJ,KACf,MAAM,GAAN,OAAUI,EAAIJ,KAAI,mBAAMI,EAAIwB,MAE9B,CACA,MAAO,EACR,CACA,MAAO,EACR,CAc2BC,CAAeN,EAAStB,GAC3C,EACA6B,aAAc,WACbrB,EAAkB,GACnB,EACAsB,KAAMhC,EAAqBwB,EAAStB,GACpC+B,OAAO,UACPnB,MAAO,CACNoB,MAAO,CACNF,KAAMzB,EAAoBiB,EAAStB,GACnCiC,QAAS,UAbNZ,EAAIa,OAkBZ,GAAE,KAKP,EAEMC,EAAM,SAAAC,GACX,IAAQpC,EAA6BoC,EAA7BpC,KAAMS,EAAuB2B,EAAvB3B,UAAWC,EAAY0B,EAAZ1B,QACzB,GAA8B2B,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAC1B,OACG,iCACE,SAAChC,EAAQ,CAACP,KAAMA,EAAMS,UAAWA,EAAWC,QAASA,EAASF,kBAAmB+B,KACjF,SAAC,IAAY,UAAED,MAGrB,EAEME,EAAiB,SAAAxC,GAUtB,OATaA,EAAKoB,KAAI,SAAAjB,GAAG,OACxB,iBAAKsC,UAAU,yDAAwD,WACtE,4BACC,SAAC,IAAK,CAACrC,MAAOD,EAAIC,SAClB,iBAAMqC,UAAU,uBAAsB,SAAEtC,EAAIJ,WAE7C,iBAAM0C,UAAU,6BAA4B,SAAEtC,EAAIwB,UAL0BxB,EAAIJ,KAM3E,GAGR,EAEa2C,EAAmB,SAAAN,GAC/B,IAAQpC,EAAmDoC,EAAnDpC,KAAMS,EAA6C2B,EAA7C3B,UAAWC,EAAkC0B,EAAlC1B,QAASiC,EAAyBP,EAAzBO,MAAOL,EAAkBF,EAAlBE,QAASM,EAASR,EAATQ,KAC5CC,GAAYvC,EAAAA,EAAAA,cAAoBX,KAAiBmD,SAAS,MAChE,OACC,SAAC,IAAI,CAACC,UAAW,CAACxD,QAAS,GAAG,UAC7B,UAAC,IAAG,YACH,SAAC,IAAG,CAACyD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGV,UAAU,eAAc,UAC3D,iBAAKA,UAAU,uDAAsD,WACpE,yBAAME,IAAS,eAAIF,UAAU,mBAAkB,SAAEE,OACjD,yBAAML,KACN,yBAAMM,GAAcJ,EAAexC,WAGrC,SAAC,IAAG,CAACgD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,UACnC,gBAAKV,UAAU,4CAA4C7B,MAAO,CAACwC,UAAWP,EAAW,IAAM,KAAM,UACpG,gBAAKJ,UAAU,YAAW,UACzB,SAACN,EAAG,CAACnC,KAAMA,EAAMS,UAAWA,EAAWC,QAASA,cAOvD,EAWAgC,EAAiBW,aAAe,CAC/BrD,KAAM,GACNS,UAzIc6C,EA0Id5C,QAAS,SAGV,O","sources":["components/shared-components/Flex/index.js","components/shared-components/RegiondataWidget/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { useState } from 'react'\r\nimport { Card, Row, Col, Badge, Grid } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from 'react-tooltip'\r\nimport WorldMap from 'assets/maps/world-countries-sans-antarctica.json'\r\nimport utils from 'utils'\r\n\r\nconst { useBreakpoint } = Grid;\r\nconst geoUrl = WorldMap;\r\nconst mapColor = '#F5F4F6';\r\nconst hoverPercentage = -10;\r\n\r\nconst getHighlightedRegion = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn elm.color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mapColor\r\n\t}\r\n\treturn mapColor\r\n}\r\n\r\nconst getRegionHoverColor = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn utils.shadeColor(elm.color, hoverPercentage)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n\t}\r\n\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n}\r\n\r\nconst getRegionValue = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn `${elm.name} â€” ${elm.value}`\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ''\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst MapChart = ({ setTooltipContent, data, mapSource, mapType }) => {\r\n  \treturn (\r\n\t\t<ComposableMap style={{transform: `${mapType === 'world' ? 'translateY(20px)' : 'none'}`}} data-tip=\"\" height={380} projectionConfig={{ scale: 145 }}>\r\n\t\t\t<Geographies geography={mapSource}>\r\n\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\tgeographies.map(geo => {\r\n\t\t\t\t\t\tconst geoName = mapType === 'world' ? geo.properties.name : geo.properties.NAME_1 \r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(getRegionValue(geoName, data));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfill={getHighlightedRegion(geoName, data)}\r\n\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\tfill: getRegionHoverColor(geoName, data),\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Geographies>\r\n\t\t</ComposableMap>\r\n    )\r\n}\r\n\r\nconst Map = props => {\r\n\tconst { data, mapSource, mapType } = props\r\n\tconst [content, setContent] = useState(\"\");\r\n\treturn (\r\n    <>\r\n      <MapChart data={data} mapSource={mapSource} mapType={mapType} setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nconst renderDataList = data => {\r\n\tconst list = data.map(elm => (\r\n\t\t<div className=\"d-flex align-items-center justify-content-between mb-3\" key={elm.name}>\r\n\t\t\t<div>\r\n\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t<span className=\"text-gray-light mx-2\">{elm.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<span className=\"font-weight-bold text-dark\">{elm.value}</span>\r\n\t\t</div>\r\n\t))\r\n\treturn list\r\n}\r\n\r\nexport const RegiondataWidget = props => {\r\n\tconst { data, mapSource, mapType, title, content, list } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\treturn (\r\n\t\t<Card bodyStyle={{padding: 0}}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={7} className=\"border-right\">\r\n\t\t\t\t\t<div className=\"d-flex flex-column p-3 justify-content-between h-100\">\r\n\t\t\t\t\t\t<div>{title && <h4 className=\"font-weight-bold\">{title}</h4>}</div>\r\n\t\t\t\t\t\t<div>{content}</div>\r\n\t\t\t\t\t\t<div>{list ? list : renderDataList(data)}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={17}>\r\n\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\" style={{minHeight: isMobile ? 200 : 435 }}>\r\n\t\t\t\t\t\t<div className=\"p-3 w-100\" >\r\n\t\t\t\t\t\t\t<Map data={data} mapSource={mapSource} mapType={mapType}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nRegiondataWidget.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tdata: PropTypes.array,\r\n\tmapSource: PropTypes.object,\r\n\tmapType: PropTypes.string,\r\n\tcontent: PropTypes.element,\r\n\tlist: PropTypes.element\r\n}\r\n\r\nRegiondataWidget.defaultProps = {\r\n\tdata: [],\r\n\tmapSource: geoUrl,\r\n\tmapType: 'world'\r\n};\r\n\r\nexport default RegiondataWidget"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","useBreakpoint","Grid","mapColor","getHighlightedRegion","name","data","length","i","elm","color","getRegionHoverColor","utils","MapChart","setTooltipContent","mapSource","mapType","ComposableMap","style","transform","height","projectionConfig","scale","Geographies","geography","geographies","map","geo","geoName","properties","NAME_1","Geography","onMouseEnter","value","getRegionValue","onMouseLeave","fill","stroke","hover","outline","rsmKey","Map","props","useState","content","setContent","renderDataList","className","RegiondataWidget","title","list","isMobile","includes","bodyStyle","xs","sm","md","lg","minHeight","defaultProps","WorldMap"],"sourceRoot":""}